{"id":314122008,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1584687582,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/314122008/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isValidBST(self, root: TreeNode) -> bool:\n        if root == None : return True\n        elif root.left == None and root.right == None : return True\n        else:\n            left = root.left\n            right = root.right\n            valid_left = False\n            valid_right = False\n            if left != None:\n                if left.val >= root.val:\n                    return False\n            valid_left = self.isValidBST(left)\n            if right != None:\n                if right.val <= root.val:\n                    return False\n            valid_right = self.isValidBST(right)\n            return valid_left and valid_right","compare_result":"111111111111010011111111111111111111111111111111111111111111111111111011110","title_slug":"validate-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}