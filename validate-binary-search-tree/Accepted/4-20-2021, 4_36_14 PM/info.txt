{"id":483179606,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618954574,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/483179606/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool first_time = false;\n    int last_value;\n    bool isValidBST(TreeNode* root) {\n        bool ans = true;\n        dfs(root, ans);\n        return ans;\n    }\n    void dfs(TreeNode *root, bool &ans)\n    {\n        if(!ans) return;\n        if(root)\n        {\n            dfs(root->left, ans);\n            if(!first_time)\n            {\n                first_time = true;\n            }else if(root->val <= last_value){\n                \n                ans = false;\n            }\n            last_value = root->val;\n            dfs(root->right, ans);\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}