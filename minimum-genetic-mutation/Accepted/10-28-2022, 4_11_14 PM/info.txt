{"id":832311234,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1666991474,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/832311234/","is_pending":"Not Pending","title":"Minimum Genetic Mutation","memory":"6.5 MB","code":"class Solution {\npublic:\nint ans = INT32_MAX;\nint hamming_distance(std::string &s1, std::string &s2)\n{\n    int hamming_dist = 0;\n    for (int i = 0; i < s1.size(); i++)\n    {\n        if (s1[i] != s2[i])\n        {\n\n            hamming_dist++;\n        }\n    }\n    return hamming_dist;\n}\nvoid dfs(std::string &root, std::string &end,\n         std::map<std::string, bool> &visited, std::vector<std::string> &bank, int &cnt)\n{\n    if (hamming_distance(root, end) == 0)\n    {\n        ans = std::min(ans, cnt);\n        return;\n    }\n      visited[root] = true;\n        cnt++;\n        for (auto &gen : bank)\n        {\n            if (!visited[gen] && hamming_distance(gen, root) == 1)\n            {\n                dfs(gen, end, visited, bank, cnt);\n            }\n        }\n        cnt--;\n        visited[root] = false;\n}\nint minMutation(std::string start, std::string end, std::vector<std::string> &bank)\n{\n    std::vector<std::string> roots;\n    std::map<std::string, bool> visited;\n    std::string root = \"\";\n\n    for (auto &gen : bank)\n    {\n        if (hamming_distance(gen, start) == 1)\n        {\n            roots.push_back(gen);\n        }\n\n        visited[gen] = false;\n    }\n    if (roots.size() == 0)\n        return -1;\n    for (auto &r : roots)\n    {\n        int cnt = 1;\n        dfs(r, end, visited, bank, cnt);\n    }\n    if(ans != INT32_MAX) return ans;\n\n    return -1;\n}\n};\n//AACCGGTT AAACGGTA","compare_result":"111111111111111","title_slug":"minimum-genetic-mutation","has_notes":false,"notes":"","topic_tags":[]}