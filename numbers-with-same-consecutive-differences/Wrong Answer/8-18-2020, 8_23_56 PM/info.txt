{"id":382968165,"lang":"python3","lang_name":"Python3","time":"2 years, 4 months","timestamp":1597800236,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/382968165/","is_pending":"Not Pending","title":"Numbers With Same Consecutive Differences","memory":"N/A","code":"class Solution:\n    def numsSameConsecDiff(self, N: int, K: int) -> List[int]:\n        if N == 1 and K == 0:\n            return [x for x in range(10)]\n        def getPositiveRoots(x):\n            roots = []\n            b = -2*x\n            c = x**2 - K**2\n            d = b**2 - 4*c\n            if d >= 0:\n                x1 = (-b + math.sqrt(d)) / 2\n                x2 = (-b - math.sqrt(d)) / 2\n                if x1.is_integer() and x1 >= 0 and math.floor(x1) <= 9:\n                    roots.append(math.floor(x1))\n                if x2.is_integer() and x2 >= 0 and math.floor(x2) <= 9:\n                    roots.append(math.floor(x2))\n                return roots\n            else:\n                return []\n\n        def gen(curr, aux):\n            res = str(curr)\n            l = len(res)\n            if l == N:\n                aux.append(curr)\n                return\n            roots = getPositiveRoots(int(res[l - 1]))\n            if len(roots) == 1:\n                gen(int(res + str(roots[0])), aux)\n            elif len(roots) == 2:\n                gen(int(res + str(roots[0])), aux)\n                gen(int(res + str(roots[1])), aux)\n            else: return\n        res = []\n        for i in range(1, 10):\n            gen(i, res)\n        return res\n","compare_result":"11100000000001111111110111111111011111111101111111110111111111011111111101111111110111111111","title_slug":"numbers-with-same-consecutive-differences","has_notes":false,"notes":"","topic_tags":[]}