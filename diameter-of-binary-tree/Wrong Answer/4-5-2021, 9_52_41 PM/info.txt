{"id":477049305,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1617677561,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/477049305/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        return maxDepth(root->right) + maxDepth(root->left);\n    }\n    int maxDepth(TreeNode *root)\n    {\n        if(root != nullptr)\n        {\n            int left = 1 + maxDepth(root->left);\n            int right = 1 + maxDepth(root->right);\n            \n            return std::max(left, right);\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001011","title_slug":"diameter-of-binary-tree","has_notes":false,"notes":"","topic_tags":[]}