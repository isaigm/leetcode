{"id":380144112,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1597287348,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/380144112/","is_pending":"Not Pending","title":"Path Sum","memory":"21.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode *root, bool &flag, int sum){\n    if(root != nullptr){\n        if(sum == 0 && root->left == nullptr && root->right == nullptr){\n            flag = true;\n            return;\n        }\n        if(root->left != nullptr){\n            dfs(root->left, flag, sum - root->left->val);\n        }\n        if(root->right != nullptr){\n            dfs(root->right, flag, sum - root->right->val);\n        }\n    }\n}\nbool hasPathSum(TreeNode* root, int sum) \n{\n    if(root == nullptr) return false;\n    bool flag = false;\n    dfs(root, flag, sum - root->val);\n    return flag;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"notes":"","topic_tags":[]}