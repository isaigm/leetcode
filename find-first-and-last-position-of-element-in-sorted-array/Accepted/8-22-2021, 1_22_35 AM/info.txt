{"id":542290445,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1629613355,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/542290445/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.7 MB","code":"class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n        std::vector<int> ans(2);\n        ans[0] = first_idx(nums, target);\n        ans[1] = last_idx(nums, target);\n        return ans;\n    }\n    int last_idx(std::vector<int> &nums, int target)\n    {\n        int left = 0;\n        int right = nums.size() - 1;\n        int idx = -1;\n        while(left <= right)\n        {\n            int mid = left + (right - left) / 2;\n            if(nums[mid] == target)\n            {\n                idx = mid;\n            }\n            if(nums[mid] <= target)\n            {\n                left = mid + 1;\n            }else if(nums[mid] > target)\n            {\n                right = mid - 1;\n            }\n        }\n        return idx;\n    }\n    int first_idx(std::vector<int> &nums, int target)\n    {\n        int left = 0;\n        int right = nums.size() - 1;\n        int idx = -1;\n        while(left <= right)\n        {\n            int mid = left + (right - left) / 2;\n            if(nums[mid] == target)\n            {\n                idx = mid;\n            }\n            if(nums[mid] < target)\n            {\n                left = mid + 1;\n            }else if(nums[mid] >= target)\n            {\n                right = mid - 1;\n            }\n        }\n        return idx;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"notes":"","topic_tags":[]}