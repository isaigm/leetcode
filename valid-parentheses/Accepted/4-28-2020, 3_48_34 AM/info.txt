{"id":331297895,"lang":"cpp","lang_name":"C++","time":"2 years, 8 months","timestamp":1588063714,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/331297895/","is_pending":"Not Pending","title":"Valid Parentheses","memory":"6.3 MB","code":"#include <vector>\n#include <stack>\n#include <string>\n#include <algorithm>\nclass Solution {\npublic:\n    bool isValid(string seq) {\n         const auto open_list = std::vector<char> {'{', '(', '['};\n    const auto closed_list = std::vector<char> {'}', ')', ']'};\n    std::stack<char> aux;\n    for(const auto &ch : seq){\n        if(auto it = std::find(open_list.begin(), open_list.end(), ch); it != open_list.end()){\n            aux.push(ch);\n        }else if(auto it = std::find(closed_list.begin(), closed_list.end(), ch); it != closed_list.end()){\n            if(aux.size() == 0) return false;\n            auto last = std::find(open_list.begin(), open_list.end(), aux.top()) - open_list.begin();\n            auto curr = it - closed_list.begin();\n            if(last != curr) return false;\n            else aux.pop();\n        }\n    }\n    return aux.size() == 0;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-parentheses","has_notes":false,"notes":"","topic_tags":[]}