{"id":473567273,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1616961128,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/473567273/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"9.2 MB","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        for(int i = 0; i < n; i++)\n        {\n            nums1[m + i] = nums2[i];\n        }\n        std::vector<int> sorted;\n        int l1 = 0, r1 = m - 1, l2 = m, r2 = m + n - 1;\n        int temp = l1;\n        while (l1 < r1 + 1 && l2 < r2 + 1)\n        {\n            if (nums1[l1] < nums1[l2])\n            {\n                sorted.push_back(nums1[l1]);\n                l1++;\n            }\n            else\n            {\n                sorted.push_back(nums1[l2]);\n                l2++;\n            }\n        }\n        if (l1 == r1 + 1)\n        {\n            for (int i = l2; i <= r2; i++)\n            {\n                sorted.push_back(nums1[i]);\n            }\n        }\n        else if (l2 == r2 + 1)\n        {\n            for (int i = l1; i <= r1; i++)\n            {\n                sorted.push_back(nums1[i]);\n            }\n        }\n        for (int i = temp, j = 0; i <= r2; i++, j++)\n        {\n            nums1[i] = sorted[j];\n        }\n    }\n   \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array","has_notes":false,"notes":"","topic_tags":[]}