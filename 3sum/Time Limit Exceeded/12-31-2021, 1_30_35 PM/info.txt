{"id":610496219,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1640979035,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/610496219/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"import collections\nclass Solution:\n    def threeSum(self, nums:list):\n        if len(nums) <= 2: return []\n        cnt = collections.Counter(nums)\n\n        solutions = set()\n        for i in range(len(nums)):\n            for j in range(i + 1, len(nums)):\n                s = nums[i] + nums[j]\n               \n                rem = cnt.get(-s)\n                if rem != None:\n                    cnt[nums[i]] -= 1\n                    cnt[nums[j]] -= 1\n                    cnt[-s] -= 1\n                    if cnt[nums[i]] >= 0 and cnt[nums[j]] >= 0 and cnt[-s] >= 0:\n                        solution = [nums[i], nums[j], -s]\n                \n                        solution.sort()\n\n                        solutions.add(tuple(solution))\n                  \n                    cnt[nums[i]] += 1\n                    cnt[nums[j]] += 1\n                    cnt[-s] += 1\n        return [list(s) for s in solutions]\n        \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"3sum","has_notes":false,"notes":"","topic_tags":[]}