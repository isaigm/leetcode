{"id":465841645,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1615347815,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/465841645/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void util(TreeNode *root, int &v, int &d, int curr_depth)\n    {\n        if(root != nullptr)\n        {\n            auto left = root->left;\n            auto right = root->right;\n            if(curr_depth < d)\n            {\n                auto l = new TreeNode(v);\n                auto r = new TreeNode(v);\n                l->left = left;\n                r->right = right;\n                root->left = l;\n                root->right = r;\n            }\n            util(left, v, d, curr_depth + 1);\n            util(right, v, d, curr_depth + 1);\n        }\n    }\n    TreeNode* addOneRow(TreeNode* root, int v, int d) {\n        util(root, v, d, 1);\n        return root;\n    }\n};","compare_result":"1000000001001110010011001000110100001101010101001011011100000010010110100111000000000000001011000000000000000","title_slug":"add-one-row-to-tree","has_notes":false,"notes":"","topic_tags":[]}