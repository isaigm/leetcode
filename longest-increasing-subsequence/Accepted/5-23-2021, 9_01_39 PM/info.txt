{"id":497391247,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1621821699,"status":10,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/497391247/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.3 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int dp[nums.size()];\n        int ans = INT_MIN;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            dp[i] = 1;\n            for(int j = 0; j < i; j++){\n                if(nums[j] < nums[i])\n                {\n                    dp[i] = std::max(dp[i], dp[j] + 1);\n                }\n            }\n        }\n        for(int i = 0; i < nums.size(); i++)\n        {\n            ans = std::max(ans, dp[i]);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}