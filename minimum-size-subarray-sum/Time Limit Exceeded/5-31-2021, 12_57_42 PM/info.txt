{"id":500957509,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1622483862,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/500957509/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        std::vector<int> prefix_sum(nums.size());\n        int ans = INT_MAX;\n        prefix_sum[0] = nums[0];\n        for(int i = 1; i < nums.size(); i++)   \n        {\n            prefix_sum[i] = prefix_sum[i - 1] + nums[i];\n        }\n        \n        for(int i = 0; i < nums.size(); i++)\n        {\n            for(int j = i; j < nums.size(); j++)\n            {\n                int sum = prefix_sum[j] - prefix_sum[i] + nums[i];\n                if(sum >= target)\n                {\n                    ans = std::min(ans, j - i + 1);\n                }\n            }\n        }\n        return ans == INT_MAX ? 0 : ans;\n    }\n};","compare_result":"1111111111111111110","title_slug":"minimum-size-subarray-sum","has_notes":false,"notes":"","topic_tags":[]}