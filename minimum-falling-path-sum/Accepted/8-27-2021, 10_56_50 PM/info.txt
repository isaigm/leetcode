{"id":545407061,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1630123010,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/545407061/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"9.4 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        int ans = INT_MAX;\n        int dp[matrix.size()][matrix.size()];\n        for(int i = 0; i < matrix.size(); i++)\n        {\n            for(int j = 0; j < matrix.size(); j++)\n            {\n                if(i == 0){\n                    dp[i][j] = matrix[i][j];\n                }else if(j == matrix.size() - 1){\n                    dp[i][j] = matrix[i][j] + std::min(dp[i - 1][j], dp[i - 1][j - 1]);\n                }\n                else if(j == 0)\n                {\n                    dp[i][j] = matrix[i][j] + std::min(dp[i - 1][j], dp[i - 1][j + 1]);\n                }else\n                {\n                    dp[i][j] = matrix[i][j] + std::min({dp[i - 1][j], dp[i - 1][j + 1], dp[i - 1][j - 1]});\n                }\n            }\n        }\n        for(int i = 0; i < matrix.size(); i++)\n        {\n            ans = std::min(ans, dp[matrix.size() - 1][i]);\n        }\n        return ans;\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"notes":"","topic_tags":[]}