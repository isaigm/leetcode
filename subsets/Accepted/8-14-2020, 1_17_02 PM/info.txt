{"id":380888829,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1597429022,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/380888829/","is_pending":"Not Pending","title":"Subsets","memory":"7 MB","code":"class Solution {\npublic:\n  void helper(std::vector<std::vector<int>> &res, std::vector<int> &nums, std::vector<int> &curr, size_t n, size_t max_len, size_t start, size_t left){\n    if(curr.size() == max_len){\n        res.push_back(curr);\n        return;\n    }\n    for(auto i = start; i <= nums.size() - left; i++){\n        curr.push_back(nums[i]);\n        helper(res, nums, curr, n, max_len, i + 1, left - 1);\n        curr.pop_back();\n    }\n}\nstd::vector<std::vector<int>> subsets(std::vector<int>& nums) {\n    std::vector<std::vector<int>> res;\n    res.push_back({});\n    for(int i = 1; i <= nums.size(); i++){\n        std::vector<int> curr;\n        helper(res, nums, curr, nums.size(), i, 0, i);\n    }\n    return res;\n}\n\n};","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"notes":"","topic_tags":[]}