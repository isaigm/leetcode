{"id":476630977,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1617594717,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/476630977/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"16.6 MB","code":"class MyCircularQueue {\npublic:\n    MyCircularQueue(int k) {\n        max_size = k;\n    }\n    \n    bool enQueue(int value) {\n        if(!isFull())\n        {\n            data.push_back(value);\n            return true;\n        }\n        return false;\n    }\n    \n    bool deQueue() {\n        if(!isEmpty())\n        {\n            data.erase(data.begin());\n            return true;\n        }\n        return false;\n    }\n    \n    int Front() {\n        if(!isEmpty())\n        {\n            return data.front();\n        }\n        return -1;\n    }\n    \n    int Rear() {\n        if(!isEmpty())\n        {\n            return data.back();\n        }\n        return -1;\n    }\n    \n    bool isEmpty() {\n        return data.empty();\n    }\n    \n    bool isFull() {\n        return data.size() == max_size;\n    }\n    private:\n        std::vector<int> data;\n        int max_size = 0;\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"design-circular-queue","has_notes":false,"notes":"","topic_tags":[]}