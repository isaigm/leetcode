{"id":464006972,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614981792,"status":10,"status_display":"Accepted","runtime":"592 ms","url":"/submissions/detail/464006972/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapNodes(ListNode* head, int k) {\n        if(head == nullptr || head->next == nullptr) return head;\n        ListNode *left = head;\n        ListNode *right = nullptr;\n        int size = 0;\n        while(left != nullptr)\n        {\n            size++;\n            left = left->next;\n        }\n        ListNode *cursor = head;\n        left = nullptr;\n        for(int i = 1; i <= size && !left || !right; i++)\n        {\n            if(i == k)\n            {\n                left = cursor;\n            }\n            if(i == size - k + 1)\n            {\n                right = cursor;\n            }\n            cursor = cursor->next;\n        }\n        std::swap(left->val, right->val);\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"notes":"","topic_tags":[]}