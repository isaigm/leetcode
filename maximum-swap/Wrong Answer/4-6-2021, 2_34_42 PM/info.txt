{"id":477371635,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1617737682,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/477371635/","is_pending":"Not Pending","title":"Maximum Swap","memory":"N/A","code":"class Solution {\npublic:\n    void dig(int num, std::vector<int> &digits)\n    {\n        if(num > 0)\n        {\n            dig(num / 10, digits);\n            digits.push_back(num % 10);\n        }\n    }\n    int maximumSwap(int num) {\n        std::vector<int> digits;\n        int ans = 0;\n        dig(num, digits);\n        auto m = std::max_element(digits.begin(), digits.end());\n        int i = 0;\n        while(i < digits.size() && digits[i] == *m)\n        {\n            if(i + 1 < digits.size())\n            m = std::max_element(digits.begin() + i + 1, digits.end());\n            i++;\n        }\n        if(i < digits.size())\n        {\n            std::swap(digits[i], digits[std::distance(digits.begin(), m)]);\n        }\n        for(int i = 0; i < digits.size(); i++)\n        {\n            ans += digits[i] * std::pow(10, digits.size() - i - 1);\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111011111111001101111101111111111111010010111001111100011010100111011000111011010111111","title_slug":"maximum-swap","has_notes":false,"notes":"","topic_tags":[]}