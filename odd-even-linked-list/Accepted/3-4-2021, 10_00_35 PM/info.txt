{"id":463717554,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614916835,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/463717554/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"11 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(head == nullptr)\n        {\n            return nullptr;\n        }\n        std::vector<ListNode*> odd_nodes;\n        std::vector<ListNode*> even_nodes;\n        ListNode *cursor = head;\n        for(int i = 1; cursor != nullptr; i++)\n        {\n            if(i % 2)\n            {\n                odd_nodes.push_back(cursor);\n            }else{\n                even_nodes.push_back(cursor);\n            }\n            cursor = cursor->next;\n        }\n        cursor = head;\n        for(int i = 0; i < odd_nodes.size() - 1; i++)\n        {\n            cursor->next = odd_nodes[i + 1];\n            cursor = cursor->next;\n        }\n        for(int i = 0; i < even_nodes.size(); i++)\n        {\n            cursor->next = even_nodes[i];\n            cursor = cursor->next;\n        }\n        cursor->next = nullptr;\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"notes":"","topic_tags":[]}