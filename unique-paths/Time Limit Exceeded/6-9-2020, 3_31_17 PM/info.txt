{"id":351404843,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1591734677,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/351404843/","is_pending":"Not Pending","title":"Unique Paths","memory":"N/A","code":"class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        return aux(m, n, 0, 0);\n    }\n    int aux(int M, int N, int m, int n){\n            // base case\n        if (n == N || m == M)\n            return 0;\n\n        // if we're at first cell (0, 0)\n        if (m == M-1 && n == N-1)\n            return 1;\n\n        // include cost of the current cell in path and recur to find minimum\n        // of the path from adjacent left cell and adjacent top cell.\n        return aux(M, N, m+1, n) + aux(M, N, m, n + 1);\n    }\n};","compare_result":"11111111111111111111111111111111111110000000000000000000000000","title_slug":"unique-paths","has_notes":false,"notes":"","topic_tags":[]}