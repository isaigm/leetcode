{"id":461843946,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614547590,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/461843946/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void util(TreeNode *root, int parent, int &path, int &ans)\n    {\n        if(root != nullptr)\n        {\n            if(root->val == parent)\n            {\n                path++;\n            }else {\n                path = 0;\n            }\n            \n            ans = std::max(ans, path);\n            util(root->left, root->val, path, ans);\n            path = 0;\n            util(root->right, root->val, path, ans);\n        }\n    }\n    int longestUnivaluePath(TreeNode* root) {\n        if(root == nullptr) return 0;\n        int ans = INT_MIN;\n        int path = 1;\n        util(root, INT_MIN, path, ans);\n        return ans;\n    }\n};","compare_result":"10111100000101111110001111110111111101110000000000000000000000000000000","title_slug":"longest-univalue-path","has_notes":false,"notes":"","topic_tags":[]}