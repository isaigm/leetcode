{"id":461845661,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614547908,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/461845661/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"71.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n      int ans;\n     int longestUnivaluePath(TreeNode *root) {\n        ans = 0;\n        arrowLength(root);\n        return ans;\n    }\n     int arrowLength(TreeNode *node) {\n        if (node == nullptr) return 0;\n        int left = arrowLength(node->left);\n        int right = arrowLength(node->right);\n        int arrowLeft = 0, arrowRight = 0;\n        if (node->left != nullptr && node->left->val == node->val) {\n            arrowLeft += left + 1;\n        }\n        if (node->right != nullptr && node->right->val == node->val) {\n            arrowRight += right + 1;\n        }\n        ans = max(ans, arrowLeft + arrowRight);\n        return max(arrowLeft, arrowRight);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-univalue-path","has_notes":false,"notes":"","topic_tags":[]}