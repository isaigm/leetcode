{"id":760150122,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1659126537,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/760150122/","is_pending":"Not Pending","title":"Restore IP Addresses","memory":"6.6 MB","code":"class Solution {\npublic:\n   std::string filter(std::vector<std::string>& ip)\n{\n    std::string res = \"\";\n    for (int i = 0; i < 4; i++)\n    {\n     \n        std::stringstream ss(ip[i]);\n        int num;\n        ss >> num;\n        if (ip[i][0] == '0' && ip[i].size() > 1) return \"\";\n        if (num > 255) return \"\";\n        if (i < 3)\n        {\n            res += ip[i] + \".\";\n        }\n        else\n        {\n            res += ip[i];\n        }\n    }\n    return res;\n}\nvoid bt(std::string& s, std::vector<std::string>& ip, std::vector<std::string>& ips, int start, int segment)\n{\n    if (segment >= 4)\n    {\n        if (start >= s.size())\n        {\n            std::string res = filter(ip);\n            if (res.size() > 0) ips.push_back(res);\n        }\n      \n        return;\n    }\n   \n    for (int i = start; i < start + 3; i++)\n    {\n       \n        if (i >= s.size()) break;\n        ip[segment].push_back(s[i]);\n        bt(s, ip, ips, i + 1, segment + 1);\n    }\n    ip[segment].erase(ip[segment].begin(), ip[segment].end());\n}\nstd::vector<std::string> restoreIpAddresses(std::string s)\n{\n\n    std::vector<std::string> ips;\n    std::vector<std::string> ip {\"\",\"\",\"\",\"\"};\n    bt(s, ip, ips, 0, 0);\n    return ips;\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"restore-ip-addresses","has_notes":false,"notes":"","topic_tags":[]}