{"id":385077841,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1598169110,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/385077841/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\npublic:\nvoid helper(bool *visited, std::vector<std::vector<char>> &grid, int r1, int c1, int &r, int &c, int &total){\n    if(!visited[r1 * c + c1] && grid[r1][c1] == '1'){\n        visited[r1 * c + c1] = true;\n        total--;\n        if(r1 + 1 < r && grid[r1 + 1][c1] == '1'){\n            helper(visited, grid, r1 + 1, c1, r, c, total);\n        }\n        if(r1 - 1 >= 0 && grid[r1 - 1][c1] == '1'){\n            helper(visited, grid, r1 - 1, c1, r, c, total);\n        }\n        if(c1 + 1 < c && grid[r1][c1 + 1] == '1'){\n\n            helper(visited, grid, r1, c1 + 1, r, c, total);\n\n        }\n        if(c1 - 1 >= 0 && grid[r1][c1 - 1] == '1'){\n            helper(visited, grid, r1, c1 - 1, r, c, total);\n        }\n    }\n}\nint numIslands(std::vector<std::vector<char>>& grid) {\n    bool *visited = new bool[grid.size() * grid[0].size()];\n    int r = grid.size();\n    int c = grid[0].size();\n    int total = 0;\n    int res = 0;\n    for(int i = 0; i < r; i++){\n        for(int j = 0; j < c; j++){\n            visited[i * c + j] = false;\n            if(grid[i][j] == '1') total++;\n        }\n    }\n    for(int i = 0; i < r; i++){\n        for(int j = 0; j < c; j++){\n            if(!visited[i * c + j] && grid[i][j] != '0'){\n                helper(visited, grid, i, j, r, c, total);\n                res++;\n            }\n            if(total <= 0){\n                delete [] visited;\n                return res;\n            }\n\n        }\n    }\n    delete [] visited;\n    return res;\n}\n};","compare_result":"11000000000000000000000000000000000000000000000","title_slug":"number-of-islands","has_notes":false,"notes":"","topic_tags":[]}