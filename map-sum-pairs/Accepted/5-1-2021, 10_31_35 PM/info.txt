{"id":487701469,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1619926295,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/487701469/","is_pending":"Not Pending","title":"Map Sum Pairs","memory":"8.2 MB","code":"#include <iostream>\nstruct trie_node\n{\n    bool is_key;\n    char c;\n    int value;\n    trie_node *childs[26];\n    trie_node(char cc = '\\0')\n    {\n        c = cc;\n        is_key = false;\n        for (int i = 0; i < 26; i++)\n        {\n            childs[i] = nullptr;\n        }\n    }\n};\nvoid insert(trie_node *root, std::string key, int value)\n{\n    auto cursor = root;\n    for (size_t i = 0; i < key.size(); i++)\n    {\n        int idx = key[i] - 'a';\n        if (cursor->childs[idx] == nullptr)\n        {\n            cursor->childs[idx] = new trie_node(key[i]);\n        }\n        cursor = cursor->childs[idx];\n    }\n    cursor->value = value;\n    cursor->is_key = true;\n}\nvoid dfs(trie_node *node, int &s)\n{\n    if (node)\n    {\n        if (node->is_key)\n        {\n            s += node->value;\n        }\n        for (int i = 0; i < 26; i++)\n        {\n            dfs(node->childs[i], s);\n        }\n    }\n}\nint prefix_sum(trie_node *root, std::string prefix)\n{\n    int s = 0;\n    auto cursor = root;\n    for (size_t i = 0; i < prefix.size(); i++)\n    {\n        if (cursor->childs[prefix[i] - 'a'] == nullptr)\n        {\n            return 0;\n        }\n        cursor = cursor->childs[prefix[i] - 'a'];\n    }\n    dfs(cursor, s);\n    return s;\n}\nclass MapSum {\npublic:\n    /** Initialize your data structure here. */\n    MapSum() {\n        root = new trie_node();\n    }\n    \n    void insert(string key, int val) {\n        ::insert(root, key, val);\n    }\n    \n    int sum(string prefix) {\n        return prefix_sum(root, prefix);\n    }\n    trie_node *root = nullptr;\n};\n\n/**\n * Your MapSum object will be instantiated and called as such:\n * MapSum* obj = new MapSum();\n * obj->insert(key,val);\n * int param_2 = obj->sum(prefix);\n */","compare_result":"1111111111111111111111111111111111","title_slug":"map-sum-pairs","has_notes":false,"notes":"","topic_tags":[]}