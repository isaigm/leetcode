{"id":477115109,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1617687696,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/477115109/","is_pending":"Not Pending","title":"Count Servers that Communicate","memory":"22.7 MB","code":"class Solution {\npublic:\n    int countServers(vector<vector<int>>& grid) {\n        std::map<int, int> c_cols;\n        std::map<int, int> c_rows;\n        int ans = 0;\n        for(int i = 0; i < grid.size(); i++)\n        {\n            for(int j = 0; j < grid[0].size(); j++)\n            {\n                if(grid[i][j])\n                {\n                    c_rows[i]++;\n                    c_cols[j]++;\n                }\n            }\n        }\n        for(const auto [x, n]: c_rows){\n            if(n > 1) ans += n;\n        }\n        for(const auto [x, n]: c_cols){\n            if(n > 1) ans += n;\n        }\n        for(int i = 0; i < grid.size(); i++)\n        {\n            for(int j = 0; j < grid[0].size(); j++)\n            {\n                if(grid[i][j] && (c_rows[i] > 1 && c_cols[j] > 1))\n                {\n                    ans--;\n                }\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"count-servers-that-communicate","has_notes":false,"notes":"","topic_tags":[]}