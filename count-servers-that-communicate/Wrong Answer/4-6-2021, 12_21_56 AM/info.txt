{"id":477107690,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1617686516,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/477107690/","is_pending":"Not Pending","title":"Count Servers that Communicate","memory":"N/A","code":"class Solution {\npublic:\n    int countServers(vector<vector<int>>& grid) {\n        std::map<int, int> c_cols;\n        std::map<int, int> c_rows;\n        int ans = 0;\n        auto count_neighbours = [](vector<vector<int>>& grid, int i, int j)\n        {\n            int n = 0;\n            if(i - 1 >= 0) n += grid[i - 1][j];\n            if(i + 1 < grid.size()) n += grid[i + 1][j];\n            if(j - 1 >= 0) n += grid[i][j - 1];\n            if(j + 1 < grid[0].size()) n += grid[i][j + 1];\n            return n;\n        };\n        int isolated = 0;\n        for(int i = 0; i < grid.size(); i++)\n        {\n            for(int j = 0; j < grid[0].size(); j++)\n            {\n                if(grid[i][j])\n                {\n                    if(count_neighbours(grid, i, j) == 0) isolated++;\n                    ans++;\n                }\n            }\n        }\n      \n        return ans - isolated;\n        \n    }\n};","compare_result":"1110100000000000000000000000000000000000000000000000000","title_slug":"count-servers-that-communicate","has_notes":false,"notes":"","topic_tags":[]}