{"id":483324832,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1618985215,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/483324832/","is_pending":"Not Pending","title":"Non-decreasing Array","memory":"40 MB","code":"class Solution {\n     public boolean checkPossibility(int[] nums) {\n        int idx = -1;\n         int last = -1;\n        for(int i = 0; i < nums.length - 1; i++)\n        {\n            if(nums[i] > nums[i + 1])\n            {\n                idx = i;\n                last = nums[i + 1];\n                nums[i + 1] = nums[i];\n                break;\n            }\n        }\n         boolean flag = false;\n        for(int j = 0; j < nums.length - 1; j++)\n        {\n            if(nums[j] > nums[j + 1] ){\n                flag = true;\n                break;\n            }\n        }\n         if(flag && idx != -1)\n         {\n             nums[idx] = last;\n             nums[idx + 1] = last;\n              for(int j = 0; j < nums.length - 1; j++)\n            {\n                if(nums[j] > nums[j + 1] ){\n                   return false;\n                }\n            }\n         }\n        return true;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"non-decreasing-array","has_notes":false,"notes":"","topic_tags":[]}