{"id":313347015,"lang":"python3","lang_name":"Python3","time":"2 years, 9 months","timestamp":1584467209,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/313347015/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"15 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        if root == None : return None\n        elif root.val == val : return root\n        else:\n            if val < root.val : return self.searchBST(root.left, val)\n            elif val > root.val : return self.searchBST(root.right, val) ","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}