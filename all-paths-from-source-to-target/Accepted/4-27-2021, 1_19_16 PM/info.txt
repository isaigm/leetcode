{"id":485951373,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1619547556,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/485951373/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"10.7 MB","code":"class Solution {\npublic:\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n        std::vector<std::vector<int>> res;\n        std::vector<int> ress;\n        ress.push_back(0);\n        dfs(0, graph.size() - 1, graph, ress, res);\n        return res;\n    }\n    void dfs(int curr_node, int target, vector<vector<int>>& graph,      std::vector<int> &res,  std::vector<std::vector<int>> &ress)\n    {\n        if(curr_node == target)\n        {\n            ress.push_back(res);\n            return;\n        }\n        for(auto adj: graph[curr_node])\n        {\n            res.push_back(adj);\n            dfs(adj, target, graph, res, ress);\n            res.pop_back();\n        }\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"notes":"","topic_tags":[]}