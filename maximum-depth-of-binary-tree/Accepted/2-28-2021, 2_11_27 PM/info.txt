{"id":461819660,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614543087,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/461819660/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(root != nullptr)\n        {\n            return 1 + std::max(maxDepth(root->left), maxDepth(root->right));\n        }\n        return 0;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"notes":"","topic_tags":[]}