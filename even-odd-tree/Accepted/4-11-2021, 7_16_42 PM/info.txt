{"id":479502136,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618186602,"status":10,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/479502136/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"150.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isEvenOddTree(TreeNode* root) {\n        std::queue<TreeNode *> q;\n        int level = 0;\n        q.push(root);\n        while(!q.empty()){\n            int s = q.size();\n            int last_value = -1;\n            for(int i = 0; i < s; i++)\n            {\n                auto node = q.front();\n                q.pop();\n                if(last_value == node->val) return false;\n                if(level % 2)\n                {\n                    if(node->val % 2) return false;\n                    if(last_value != -1 && node->val > last_value) return false;\n                }else\n                {\n                    if(node->val % 2 == 0) return false;\n                    if(last_value != -1 && node->val < last_value) return false;\n                }\n                last_value = node->val;\n                if(node->left)\n                {\n                    q.push(node->left);\n                }\n                if(node->right)\n                {\n                    q.push(node->right);\n                }\n            }\n            level++;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree","has_notes":false,"notes":"","topic_tags":[]}