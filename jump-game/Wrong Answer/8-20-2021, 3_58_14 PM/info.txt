{"id":541607597,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1629493094,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/541607597/","is_pending":"Not Pending","title":"Jump Game","memory":"N/A","code":"class Solution {\npublic:\nvoid _canJump(int *cache, bool &solved, int idx, std::vector<int> &nums)\n{\n    if(idx >= nums.size()) return;\n    if(nums[idx] == 0) return;\n    if(cache[idx] != -1) {\n        solved = cache[idx];\n        return;\n    }\n    if(idx == nums.size() - 1)\n    {\n        solved = true;\n        cache[idx] = 1;\n        return;\n    }\n    \n    for(int i = 1; i <= nums[idx]; i++)\n    {\n        _canJump(cache, solved, idx + i, nums);\n        if(solved)\n        {\n            cache[idx] = 1;\n            return;\n        }\n    }\n    cache[idx] = 0;\n}\n    bool canJump(vector<int>& nums) {\n        if(nums.size() == 1) return true;\n        int cache[nums.size()];\n        bool solved = false;\n        \n        for(int i = 0; i < nums.size(); i++)\n        {\n            cache[i] = -1;\n        }\n        _canJump(cache, solved, 0, nums);\n        return solved;\n    }\n};","compare_result":"1111110110111111001110111111110111111111011111111111111111111110111111110111101110011111111111111011111111101111101111101111101101110111110101111011111111101111111011","title_slug":"jump-game","has_notes":false,"notes":"","topic_tags":[]}