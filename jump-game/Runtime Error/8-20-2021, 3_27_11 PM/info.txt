{"id":541597574,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1629491231,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/541597574/","is_pending":"Not Pending","title":"Jump Game","memory":"N/A","code":"class Solution {\npublic:\nvoid _canJump(int *cache, bool &solved, int &steps, int idx, std::vector<int> &nums)\n{\n    if(cache[idx] != -1) \n    {\n        solved = cache[idx];\n        return;\n    }\n    for (int i = idx; i < nums.size() - 1; i++)\n    {\n        int k = nums[i];\n        if(k == 0)\n        {\n            solved = false;\n            cache[idx] = 0;\n            return;\n        }\n            while (k > 0)\n            {\n                steps += k;\n               \n                if (steps == nums.size() - 1)\n                {\n                    solved = true;\n                    cache[idx] = 1;\n                    return;\n                }\n                _canJump(cache, solved, steps, steps, nums);\n                if (solved)\n                { \n                    cache[idx] = 1;\n                    return;\n                }\n                steps -= k;\n                k--;\n            }\n        \n    }\n}\n    bool canJump(vector<int>& nums) {\n        if(nums.size() == 1) return true;\n        int cache[nums.size()];\n        bool solved = false;\n        int steps = 0;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            cache[i] = -1;\n        }\n        _canJump(cache, solved, steps, 0, nums);\n        return solved;\n    }\n};","compare_result":"1111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"jump-game","has_notes":false,"notes":"","topic_tags":[]}