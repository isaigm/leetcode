{"id":464355364,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1615058946,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/464355364/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode *curr = head;\n        std::stack<ListNode *> st;\n        if(head == nullptr) return head;\n        while(curr != nullptr)\n        {\n            st.push(curr);\n            curr = curr->next;\n        }\n        curr = head;\n        int s = st.size() / 2;\n        for(int i = 0; i < s; i++)\n        {\n            auto n = st.top();\n            std::swap(curr->val, n->val);\n            st.pop();\n            curr = curr->next;\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}