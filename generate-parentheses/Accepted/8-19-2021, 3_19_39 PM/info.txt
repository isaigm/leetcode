{"id":541108337,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1629404379,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/541108337/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"11.3 MB","code":"class Solution {\npublic:\n    vector<string> generateParenthesis(int n) {\n        std::vector<std::string> res;\n        std::string s;\n        helper(res, s, n, 0, 0);\n        \n        \n        return res;\n    }\n    bool is_ok(std::string &s)\n    {\n        int c = 0;\n        for(const auto &x: s)\n        {\n            if(x == '(')\n            {\n                c++;\n            }\n            if(x == ')')\n            {\n                c--;\n            }\n            if(c < 0) return false;\n        }\n        return c == 0;\n    }\n    void helper(std::vector<std::string> &ans, std::string &s, int n, int left, int right)\n    {\n        if(s.size() == 2 * n)\n        {\n            if(is_ok(s))\n            {\n               ans.push_back(s);\n            }\n            return;\n        }\n        if(left < n)\n        {\n            s.push_back('(');\n            helper(ans, s, n, left + 1, right);\n            s.pop_back();\n        }\n        if(right < n)\n        {\n            s.push_back(')');\n            helper(ans, s, n, left, right + 1);\n            s.pop_back();\n        }\n       \n        \n    }\n};","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"notes":"","topic_tags":[]}