{"id":390139826,"lang":"java","lang_name":"Java","time":"2 years, 4 months","timestamp":1599082157,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/390139826/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"44.6 MB","code":"class Solution {\n    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {\n         int n = nums.length;\n        if (n<=1) return false;\n        if (t<0) return false;\n        \n        // take care when t == 0\n        long width = (long)t+1;\n        \n        Map<Long,Long> map = new HashMap<>();\n        for (int i = 0; i < n; i ++)\n        {\n            long bucketId = getBucketId((long)nums[i],width);\n            if (map.containsKey(bucketId))\n            {\n                return true;\n            }\n            if (map.containsKey(bucketId-1l) && Math.abs(map.get(bucketId-1)-nums[i])<width)\n            {\n                return true;\n            }\n            if (map.containsKey(bucketId+1l) && Math.abs(map.get(bucketId+1)-nums[i])<width)\n            {\n                return true;\n            }\n            map.put(bucketId,(long)nums[i]);\n            if (i-k>=0)\n            {\n                long oldBucketId = getBucketId((long)nums[i-k],width);\n                map.remove(oldBucketId);\n            }\n        }\n        \n        return false;\n    \n    \n    }\n     private long getBucketId(long val, long width)\n    {\n        return val < 0 ? (val+1l)/width-1l : val/width;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"contains-duplicate-iii","has_notes":false,"notes":"","topic_tags":[]}