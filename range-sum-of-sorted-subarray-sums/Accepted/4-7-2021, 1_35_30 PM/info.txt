{"id":477788548,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1617820530,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/477788548/","is_pending":"Not Pending","title":"Range Sum of Sorted Subarray Sums","memory":"23.8 MB","code":"class Solution {\npublic:\n    int rangeSum(vector<int>& nums, int n, int left, int right) {\n        std::vector<int> sums;\n        for(int i = 0; i < n; i++)\n        {\n            int sum = 0;\n            for(int j = i; j < n; j++)\n            {\n                sum += nums[j];\n                sums.push_back(sum);\n            }\n        }\n        std::sort(sums.begin(), sums.end());\n        int ans = 0;\n        for(int i = left - 1; i < right; i++)\n        {\n            ans += sums[i];\n            ans %= 1000000007;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"range-sum-of-sorted-subarray-sums","has_notes":false,"notes":"","topic_tags":[]}