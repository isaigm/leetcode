{"id":336077463,"lang":"python3","lang_name":"Python3","time":"2 years, 7 months","timestamp":1588915598,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/336077463/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isCousins(self, root: TreeNode, x: int, y: int) -> bool:\n        def search(node : TreeNode, value : int, parent=None, k=0) -> int:\n            if node == None: return None, -1\n            if value == node.val: return parent, k\n            r1, k1 = search(node.left, value, node, k + 1)\n            if k1 != -1: return r1, k1\n            return search(node.right, value, node, k + 1)\n        r1, k1 = search(root, x)\n        r2, k2 = search(root, y)\n        if r1 != None and r2 != None:\n            if r1.val != r2.val:\n                return k1 == k2\n        return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree","has_notes":false,"notes":"","topic_tags":[]}