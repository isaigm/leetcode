{"id":335652588,"lang":"python3","lang_name":"Python3","time":"2 years, 7 months","timestamp":1588836378,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/335652588/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isCousins(self, root: TreeNode, x: int, y: int) -> bool:\n        def search(node : TreeNode, value : int, k=0) -> int:\n            if node != None:\n                if value == node.val: return k\n                elif value < node.val: return search(node.left, value, k + 1)\n                else: return search(node.right, value, k + 1)\n            else: return -1\n        return search(root, x) == search(root, y)","compare_result":"1011011111010001111011011100110010010111101011011111110000111101001010110100010000111001110111100000011","title_slug":"cousins-in-binary-tree","has_notes":false,"notes":"","topic_tags":[]}