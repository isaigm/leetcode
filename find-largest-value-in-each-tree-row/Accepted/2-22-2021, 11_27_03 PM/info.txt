{"id":459556847,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614058023,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/459556847/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   void util(TreeNode *root, std::map<int, std::vector<int>> &tab, int level)\n    {\n        if (root != nullptr)\n        {\n            tab[level].push_back(root->val);\n            util(root->left, tab, level + 1);\n            util(root->right, tab, level + 1);\n        }\n    }\n    std::vector<int> largestValues(TreeNode *root)\n    {\n        std::vector<int> ans;\n        std::map<int, std::vector<int>> tab;\n        util(root, tab, 0);\n        for(auto it = tab.begin(); it != tab.end(); it++)\n        {\n            auto m = std::max_element(it->second.begin(), it->second.end());\n            ans.push_back(*m);\n           \n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false,"notes":"","topic_tags":[]}