{"id":463405721,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614849449,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/463405721/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        if(headA == nullptr || headB == nullptr)\n        {\n            return nullptr;\n        }\n        int a_size = 0;\n        int b_size = 0;\n        ListNode *ans = nullptr;\n        ListNode *cursorA = headA;\n        ListNode *cursorB = headB;\n        while(cursorA != nullptr)\n        {\n            cursorA = cursorA->next;\n            a_size++;\n            \n        }\n        while(cursorB != nullptr)\n        {\n            cursorB = cursorB->next;\n            b_size++;\n        }\n        cursorA = headA;\n        cursorB = headB;\n        if(a_size >= b_size)\n        {\n            for(int i = 0; i < a_size - b_size; i++)\n            {\n                cursorA = cursorA->next;\n            }\n            while(cursorA != cursorB)\n            {\n                cursorA = cursorA->next;\n                cursorB = cursorB->next;\n            }\n            ans = cursorA;\n        }else{\n            \n            for(int i = 0; i < b_size - a_size; i++)\n            {\n                cursorB = cursorB->next;\n            }\n            while(cursorA != cursorB)\n            {\n                cursorA = cursorA->next;\n                cursorB = cursorB->next;\n            }\n            ans = cursorA;\n        }\n        return ans;\n            \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"notes":"","topic_tags":[]}