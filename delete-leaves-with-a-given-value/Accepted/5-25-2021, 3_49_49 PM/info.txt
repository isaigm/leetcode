{"id":498236030,"lang":"cpp","lang_name":"C++","time":"1 year, 7 months","timestamp":1621975789,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/498236030/","is_pending":"Not Pending","title":"Delete Leaves With a Given Value","memory":"21.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* removeLeafNodes(TreeNode* root, int target) {\n        dfs(root, target);\n        if(is_leaf(root) && root->val == target)\n        {\n            return nullptr;\n        }\n        return root;\n    }\n    bool is_leaf(TreeNode *root)\n    {\n        return root && root->left == nullptr && root->right == nullptr;\n    }\n    void dfs(TreeNode *root, int target)\n    {\n        if(root)\n        {\n            if(is_leaf(root->left) && root->left->val == target)\n            {\n                root->left = nullptr;\n            }\n            if(is_leaf(root->right) && root->right->val == target)\n            {\n                root->right = nullptr;\n            }\n            dfs(root->left, target);\n            dfs(root->right, target);\n            if(is_leaf(root->left) && root->left->val == target)\n            {\n                root->left = nullptr;\n            }\n            if(is_leaf(root->right) && root->right->val == target )\n            {\n                root->right = nullptr;\n            }\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"delete-leaves-with-a-given-value","has_notes":false,"notes":"","topic_tags":[]}