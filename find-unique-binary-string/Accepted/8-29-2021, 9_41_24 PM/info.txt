{"id":546431925,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1630291284,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/546431925/","is_pending":"Not Pending","title":"Find Unique Binary String","memory":"10.4 MB","code":"class Solution {\npublic:\n    std::string result;\n    string findDifferentBinaryString(vector<string>& nums) {\n        std::unordered_set<std::string> uniques;\n        std::string curr;\n        for(int i = 0; i < nums.size(); i++)\n        {\n            uniques.insert(nums[i]);\n         \n        }\n    \n        search(uniques, curr, nums.size());\n        \n        return result;\n        \n        \n    }\n    void search(std::unordered_set<std::string> &uniques, std::string &curr, int n)\n    {\n       \n        if(curr.size() == n)\n        {\n            if(uniques.find(curr) == uniques.end())\n            {\n                result = curr;\n            }\n            return;\n        }\n        curr.push_back('0');\n        search(uniques, curr, n);\n        curr.pop_back();\n        if(result.size() > 0) return;\n        curr.push_back('1');\n        search(uniques, curr, n);\n        if(result.size() > 0) return;\n        curr.pop_back();\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-unique-binary-string","has_notes":false,"notes":"","topic_tags":[]}