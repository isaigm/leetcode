{"id":535579311,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1628484773,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/535579311/","is_pending":"Not Pending","title":"Unique Paths III","memory":"16.9 MB","code":"class Solution {\npublic:\n   //cr -> current row\n//cc -> current column\n//er -> ending row\n//ec -> ending column\nvoid back(std::vector<std::vector<int>> &grid, int &ans, int &path_len, int empty_cells, int cr, int cc)\n\n{\n \n    //x, y                                   down     up       right   left\n    std::vector<std::vector<int>> neighbours{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n\n    for (const auto &n : neighbours)\n    {\n        int c = cc + n[0];\n        int r = cr + n[1];\n        if (r < grid.size() && r >= 0 && c < grid[0].size() && c >= 0)\n        {\n            if(grid[r][c] == 2 && path_len == empty_cells )\n            {\n               \n                ans++;\n                return;\n               \n            }\n            else if (grid[r][c] == 0)\n            {\n                  \n                grid[r][c] = -1;\n                path_len++;\n                back(grid, ans, path_len, empty_cells, r, c);\n                grid[r][c] = 0;\n                path_len--;\n            }\n        }\n    }\n}\nint uniquePathsIII(std::vector<std::vector<int>> &grid)\n{\n    int empty_cells = 0;\n    int sr, sc;\n    for (int i = 0; i < grid.size(); i++)\n    {\n        for (int j = 0; j < grid[0].size(); j++)\n        {\n            if(grid[i][j] == 0)\n            {\n                empty_cells++;\n            }else if(grid[i][j] == 1)\n            {\n                sr = i;\n                sc = j;\n            }\n        }\n    }\n    \n    int ans = 0;\n    int path_len = 0;\n    back(grid, ans, path_len, empty_cells, sr, sc);\n    return ans;\n}\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii","has_notes":false,"notes":"","topic_tags":[]}