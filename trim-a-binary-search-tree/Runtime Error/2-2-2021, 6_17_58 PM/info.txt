{"id":451238147,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1612311478,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/451238147/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void trim(TreeNode **node, int low, int high)\n{\n    \n    if (*node != nullptr)\n    {\n        if ((*node)->val < low)\n        {\n            if ((*node)->left != nullptr)\n            {\n                delete ((*node)->left);\n                (*node)->left = nullptr;\n            }\n            trim(&((*node)->right), low, high);\n            auto right = (*node)->right;\n            delete (*node);\n            *node = nullptr;\n            *node = right;\n        }\n        else if ((*node)->val > high)\n        {\n            if ((*node)->right != nullptr)\n            {\n                delete ((*node)->right);\n                (*node)->right = nullptr;\n            }\n            trim(&((*node)->left), low, high);\n            auto left = (*node)->left;\n            delete (*node);\n            *node = nullptr;\n            *node = left;\n        }else{\n            trim(&((*node)->left), low, high);\n            trim(&((*node)->right), low, high);\n        }\n    }\n}\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        trim(&root, low, high);\n        return root;\n    }\n};","compare_result":"11110000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"trim-a-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}