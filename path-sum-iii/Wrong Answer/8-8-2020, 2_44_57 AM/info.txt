{"id":377772424,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1596872697,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/377772424/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode *root, int &curr_sum, int &sum, int &total){\n    if(root != nullptr){\n        curr_sum += root->val;\n        if(curr_sum == sum){\n            curr_sum = 0;\n            total++;\n        }\n        if(sum > 0){\n            if(curr_sum > sum || curr_sum < 0){\n                curr_sum = 0;\n            }\n        }else{\n            if(curr_sum < sum || curr_sum > 0){\n                curr_sum = 0;\n            }\n        }\n        dfs(root->left, curr_sum, sum, total);\n        dfs(root->right, curr_sum, sum, total);\n        \n    }\n}\n\nint pathSum(TreeNode* root, int sum) {\n        int curr_sum = 0, total = 0;\n        dfs(root, curr_sum, sum, total);\n        return total;\n}\n};","compare_result":"001111110111011000001011111000001000001001001001011111010111010010001011000010011100101101110111110101100100110010000000000011","title_slug":"path-sum-iii","has_notes":false,"notes":"","topic_tags":[]}