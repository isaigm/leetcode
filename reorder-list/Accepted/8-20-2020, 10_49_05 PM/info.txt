{"id":384010661,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1597981745,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/384010661/","is_pending":"Not Pending","title":"Reorder List","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        stack<ListNode *> S;\n        ListNode *curr = head;\n        while(curr){\n            S.push(curr);\n            curr = curr->next;\n        }\n        int n = S.size();\n        curr = head;\n        ListNode *next;\n        if (n <= 2) return;\n        for(int i = 0; i < n/2; i++){\n            next = curr->next;\n            curr->next = S.top();\n            S.pop();\n            curr = curr->next;\n            curr->next = next;\n            curr = curr->next;\n        }\n        curr->next = nullptr;\n    }\n};","compare_result":"1111111111111","title_slug":"reorder-list","has_notes":false,"notes":"","topic_tags":[]}