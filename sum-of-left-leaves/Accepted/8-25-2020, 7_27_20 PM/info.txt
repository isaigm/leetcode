{"id":386398484,"lang":"java","lang_name":"Java","time":"2 years, 4 months","timestamp":1598401640,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/386398484/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"37.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n     public int helper(TreeNode root, boolean side){\n        if(root == null){\n            return 0;\n        }\n        if(root.left == null && root.right == null && side){\n           return root.val; \n        }\n        return helper(root.left, true) + helper(root.right, false);\n    }\n    public int sumOfLeftLeaves(TreeNode root) {\n        return helper(root, false);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"notes":"","topic_tags":[]}