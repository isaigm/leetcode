{"id":541220655,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1629426845,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/541220655/","is_pending":"Not Pending","title":"Integer Break","memory":"6.4 MB","code":"class Solution {\npublic:\n    int integerBreak(int n) {\n        if(n == 4) return 4;\n        if(n == 3) return 2;\n        if(n == 2) return 1;\n        if(n % 3 == 0) return std::pow(3, n / 3);\n        std::vector<int> integers;\n        int curr_sum = 0;\n        int product = 1;\n   \n        while(curr_sum != n)\n        {\n            curr_sum += 3;\n    \n            integers.push_back(3);\n            if(curr_sum > n)\n            {\n                int idx = integers.size() - 1;\n                while(curr_sum != n)\n                {\n                    curr_sum -= 3;\n                    \n                    curr_sum += 2;\n                    integers[idx] = 2;\n                    idx--;\n                }\n                \n                break;\n            }\n        }\n        for(auto x: integers)\n        {\n            product *= x;\n        }\n        \n        return product;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"integer-break","has_notes":false,"notes":"","topic_tags":[]}