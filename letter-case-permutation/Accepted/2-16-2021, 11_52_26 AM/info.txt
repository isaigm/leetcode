{"id":456841547,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1613497946,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/456841547/","is_pending":"Not Pending","title":"Letter Case Permutation","memory":"10 MB","code":"class Solution {\npublic:\n    void backtracking(std::vector<std::string> &ans, std::string &s, int idx)\n    {\n        ans.push_back(s);\n        for(int i = idx; i < s.size(); i++)\n        {\n            if(!std::isdigit(s[i]))\n            {\n                if(std::isupper(s[i]))\n                {\n                    s[i] = std::tolower(s[i]);\n                    backtracking(ans, s, i + 1);\n                    s[i] = std::toupper(s[i]);\n                }else{\n                    s[i] = std::toupper(s[i]);\n                    backtracking(ans, s, i + 1);\n                    s[i] = std::tolower(s[i]);\n                }\n            }\n        }\n    }\n    vector<string> letterCasePermutation(string S) {\n        std::vector<std::string> ans;\n        backtracking(ans, S, 0);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-case-permutation","has_notes":false,"notes":"","topic_tags":[]}