{"id":383025297,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1597809251,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/383025297/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode* root) {\n    if(root != nullptr){\n                    std::swap(root->left, root->right);\n            invertTree(root->left);\n            invertTree(root->right);\n    }\n}\n    TreeNode* invertTree(TreeNode* root) {\n        helper(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"notes":"","topic_tags":[]}