{"id":478646914,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618002848,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/478646914/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.3 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        int ord[26];\n        for(int i = 0; i < 26; i++)\n        {\n            ord[order[i] - 'a'] = i;\n        }\n        auto are_sorted = [&ord](std::string &s1, std::string &s2)\n        {\n            int i = 0;\n            int j = 0;\n            while(i < s1.size() && j < s2.size())\n            {\n\n                if(ord[s1[i] - 'a'] > ord[s2[j] - 'a'])\n                {\n                    return false;\n                }\n                if(ord[s1[i] - 'a'] < ord[s2[j] - 'a'])\n                {\n                    return true;\n                }\n                i++;\n                j++;\n            }\n            if(j == s2.size() && j < s1.size()) return false;\n            return true;\n            \n        };\n        for(int i = 0; i < words.size() - 1; i++)\n        {\n            if(!are_sorted(words[i], words[i + 1])) return false;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false,"notes":"","topic_tags":[]}