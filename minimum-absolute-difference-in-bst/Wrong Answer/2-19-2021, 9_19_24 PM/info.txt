{"id":458200445,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1613791164,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/458200445/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void util(TreeNode *root, std::priority_queue<int, std::vector<int>, std::greater<int>> &min_heap)\n    {\n        if(root != nullptr)\n        {\n            min_heap.push(root->val);\n            if(min_heap.size() > 2)\n            {\n                min_heap.pop();\n            }\n            util(root->left, min_heap);\n            util(root->right, min_heap);\n        }\n    }\n    int getMinimumDifference(TreeNode* root) {\n        std::priority_queue<int, std::vector<int>, std::greater<int>> min_heap;\n        util(root, min_heap);\n        int first = min_heap.top();\n        min_heap.pop();\n        int second = min_heap.top();\n        return std::abs(second - first);\n    }\n};","compare_result":"101111111111111100000000000000010010000111100010000000000000000000000000000000110000001100000000010000000000000000000000000000000000001111111111100000000000000000000000000000000000000001","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"notes":"","topic_tags":[]}