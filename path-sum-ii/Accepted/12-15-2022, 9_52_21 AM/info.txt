{"id":860242933,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1671119541,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/860242933/","is_pending":"Not Pending","title":"Path Sum II","memory":"20.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        std::vector<int> path;\n        std::vector<std::vector<int>> res;\n        int sum = 0;\n        helper(root, res, sum, targetSum, path);\n        return res;\n    }\n    void helper(TreeNode *root, std::vector<std::vector<int>>& res, int &sum, int &targetSum, std::vector<int> &path)\n    {\n        if(root)\n        {\n            path.push_back(root->val);\n            sum += root->val;\n            if(root->left == nullptr && root->right == nullptr && sum == targetSum){\n                std::vector<int> copy(path);\n                res.push_back(copy);\n            }\n            helper(root->left, res, sum, targetSum, path);\n            helper(root->right, res, sum, targetSum, path);\n            sum -= root->val;\n            path.pop_back();\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"notes":"","topic_tags":[]}