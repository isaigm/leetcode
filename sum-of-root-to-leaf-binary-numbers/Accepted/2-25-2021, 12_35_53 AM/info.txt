{"id":460430184,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614234953,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/460430184/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"16.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void util(TreeNode *root, uint32_t &sum, uint32_t &path)\n{\n    if (root != nullptr)\n    {\n        if (root->left == nullptr && root->right == nullptr)\n        {\n            path <<= 1;\n            path |= root->val;\n            sum += path;\n            path >>= 1;\n        }\n        else\n        {\n            path <<= 1;\n            path |= root->val;\n            util(root->left, sum, path);\n            util(root->right, sum, path);\n            path >>= 1;\n        }\n    }\n}\nint sumRootToLeaf(TreeNode *root)\n{\n    uint32_t sum = 0;\n    uint32_t path = 0;\n    util(root, sum, path);\n    return sum;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"notes":"","topic_tags":[]}