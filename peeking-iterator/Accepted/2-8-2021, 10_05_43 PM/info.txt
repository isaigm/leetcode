{"id":453877672,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1612843543,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/453877672/","is_pending":"Not Pending","title":"Peeking Iterator","memory":"38.8 MB","code":"// Java Iterator interface reference:\n// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\n\nclass PeekingIterator implements Iterator<Integer> {\n    private Iterator<Integer> iterator;\n\tprivate boolean hasPeeked = false;\n    private Integer element;\n    public PeekingIterator(Iterator<Integer> iterator) {\n\t    // initialize any member here.\n\t    this.iterator = iterator;\n\t}\n\t\n    // Returns the next element in the iteration without advancing the iterator.\n\tpublic Integer peek() {\n        if (!hasPeeked) {\n        element = iterator.next();\n        hasPeeked = true;\n      }\n      return element;\n\t}\n\t\n\t// hasNext() and next() should behave the same as in the Iterator interface.\n\t// Override them if needed.\n\t@Override\n\tpublic Integer next() {\n\t    if (!hasPeeked) {\n        return iterator.next();\n      }\n      Integer result = element;\n      hasPeeked = false;\n      element = null;\n      return result;\n\t}\n\t\n\t@Override\n\tpublic boolean hasNext() {\n\t    return hasPeeked || iterator.hasNext();\n\t}\n}","compare_result":"1111111111111","title_slug":"peeking-iterator","has_notes":false,"notes":"","topic_tags":[]}