{"id":480658078,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618427088,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/480658078/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        std::priority_queue<int, std::vector<int>, std::less<int>> max_heap;\n        dfs(root, max_heap);\n        int size = max_heap.size();\n        int min = INT_MAX;\n        int last = 0;\n        for(int i = 0; i < size; i++)\n        {\n            min = std::min(min, std::abs(last - max_heap.top()));\n            last = max_heap.top();\n            max_heap.pop();\n        }\n        return min;\n    }\n    void dfs(TreeNode *root, std::priority_queue<int, std::vector<int>, std::less<int>> &max_heap)\n    {\n        if(root)\n        {\n            max_heap.push(root->val);\n            dfs(root->left, max_heap);\n            dfs(root->right, max_heap);\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"notes":"","topic_tags":[]}