{"id":480655988,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618426698,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/480655988/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        std::priority_queue<int, std::vector<int>, std::less<int>> max_heap;\n        dfs(root, max_heap);\n        int n1 = max_heap.top();\n        max_heap.pop();\n        int n2 = max_heap.top();\n        return std::abs(n1 - n2);\n    }\n    void dfs(TreeNode *root, std::priority_queue<int, std::vector<int>, std::less<int>> &max_heap)\n    {\n        if(root)\n        {\n            max_heap.push(root->val);\n            if(max_heap.size() > 2)\n            {\n                max_heap.pop();\n            }\n            dfs(root->left, max_heap);\n            dfs(root->right, max_heap);\n        }\n    }\n};","compare_result":"1101001000010000000000000010001000000000000000","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"notes":"","topic_tags":[]}