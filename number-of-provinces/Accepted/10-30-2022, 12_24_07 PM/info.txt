{"id":833517846,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1667154247,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/833517846/","is_pending":"Not Pending","title":"Number of Provinces","memory":"15.9 MB","code":"class Solution {\npublic:\n   int findCircleNum(std::vector<std::vector<int>> &isConnected)\n{\n    int ans = 0;\n    std::set<int> visited;\n    int n = isConnected[0].size();\n    for (int i = 0; i < n; i++)\n    {\n        std::stack<int> to_explore;\n        if (visited.find(i) == visited.end())\n        {\n            ans++;\n            to_explore.push(i);\n            while (!to_explore.empty())\n            {\n                int curr_node = to_explore.top();\n                visited.insert(curr_node);\n                to_explore.pop();\n                for (int j = 0; j < isConnected[curr_node].size(); j++)\n                {\n                    if (visited.find(j) == visited.end() && isConnected[curr_node][j])\n                    {\n                        visited.insert(j);\n                        to_explore.push(j);\n                    }\n                }\n            }\n        }\n    }\n    return ans;\n}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"notes":"","topic_tags":[]}