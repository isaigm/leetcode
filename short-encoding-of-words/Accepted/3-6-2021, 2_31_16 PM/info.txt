{"id":464375437,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1615062676,"status":10,"status_display":"Accepted","runtime":"488 ms","url":"/submissions/detail/464375437/","is_pending":"Not Pending","title":"Short Encoding of Words","memory":"19 MB","code":"class Solution {\npublic:\n    int minimumLengthEncoding(vector<string>& words) {\n         int ans = 0;\n        std::sort(words.begin(), words.end(), [](const auto &s1, const auto &s2){\n           return s1.size() > s2.size(); \n        });\n        std::map<std::string, bool> m;\n        auto check_is_last_substr = [](std::string &s1, std::string &s2)\n        {\n            int i = s2.size() - 1;\n            int j = s1.size() - 1;\n            while(i >= 0)\n            {\n                if(s2[i] != s1[j])\n                {\n                    return false;\n                }\n                i--;\n                j--;\n            }\n            return true;\n        };\n        for(int i = 0; i < words.size(); i++)\n        {\n            if(m.find(words[i]) == m.end())\n            {\n                for(int j = i +  1; j < words.size(); j++)\n                {\n                    if(check_is_last_substr(words[i], words[j]))\n                    {\n                        m[words[j]] = true;\n                    }\n                }\n                m[words[i]] = true;\n                ans += words[i].size() + 1;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"short-encoding-of-words","has_notes":false,"notes":"","topic_tags":[]}