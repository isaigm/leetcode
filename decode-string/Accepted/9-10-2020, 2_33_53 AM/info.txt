{"id":393650757,"lang":"cpp","lang_name":"C++","time":"2 years, 3 months","timestamp":1599723233,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/393650757/","is_pending":"Not Pending","title":"Decode String","memory":"6.8 MB","code":"class Solution {\npublic:\n int find_closing_bracket(const std::string &s, int pos)\n{\n    int depth = 1;\n    for (int i = pos + 1; i < int(s.length()); i++)\n    {\n        switch (s[i])\n        {\n        case '[':\n            depth++;\n            break;\n        case ']':\n            if (--depth == 0)\n            {\n                return i;\n            }\n            break;\n        }\n    }\n    return -1;\n}\n\nstd::string repeat(std::string &&s, int n)\n{\n    std::ostringstream os;\n    for (int i = 0; i < n; i++)\n        os << s;\n    return os.str();\n}\n\nstd::string helper(std::map<int, int> &brackets, std::string &s,\n                   size_t &start)\n{\n    std::string temp = \"\";\n    size_t end = brackets[start];\n    for (size_t j = start; j < end; j++)\n    {\n        if (isdigit(s[j]))\n        {\n            std::string k;\n            while (isdigit(s[j]))\n            {\n                k.push_back(s[j]);\n                j++;\n            }\n            std::stringstream st(k);\n            int times;\n            st >> times;\n            start = j;\n            temp += repeat(helper(brackets, s, start), times);\n            j = start - 1;\n        }\n        if (s[j] != ']' && s[j] != '[' && !isdigit(s[j]))\n        {\n            temp.push_back(s[j]);\n        }\n    }\n    start = end + 1;\n    return temp;\n}\n\n\n\n    string decodeString(string s) {\n         std::map<int, int> brackets;\n        for (size_t j = 0; j < s.size(); j++)\n    {\n        if (s[j] == '[')\n        {\n            brackets[j] = find_closing_bracket(s, j);\n        }\n    }\n        size_t i = 0;\n        brackets[0] = s.size();\n    auto t = helper(brackets, s, i);\n        return t;\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"decode-string","has_notes":false,"notes":"","topic_tags":[]}