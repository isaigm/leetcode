{"id":461038354,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614371181,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/461038354/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int findMin(vector<int>& nums) {\n        int left = 0;\n        int right = nums.size() - 1;\n        if(nums[0] <= nums[nums.size() - 1]) return nums[0];\n        while(left < right)\n        {\n            int mid = left + (right - left) / 2;\n            if(nums[mid] > nums[right])\n            {\n                left = mid + 1;\n            }else if(nums[left] > nums[mid])\n            {\n                right = mid;\n            }else{\n                return std::min(nums[mid - 1], nums[mid]);\n            }\n        }\n        return nums[left];\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111011111111011111111110111111011","title_slug":"find-minimum-in-rotated-sorted-array","has_notes":false,"notes":"","topic_tags":[]}