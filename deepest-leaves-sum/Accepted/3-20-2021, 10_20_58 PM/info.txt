{"id":470435759,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1616300458,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/470435759/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        int sum = 0;    \n        std::queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int s = q.size();\n            int ss = 0;\n            for(int _ = 0; _ < s; _++)\n            {\n                auto n = q.front();\n                ss += n->val;\n                q.pop();\n                if(n->left != nullptr)\n                {\n                    q.push(n->left);\n                }\n                if(n->right != nullptr)\n                {\n                    q.push(n->right);\n                }\n            }\n            sum = ss;\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"notes":"","topic_tags":[]}