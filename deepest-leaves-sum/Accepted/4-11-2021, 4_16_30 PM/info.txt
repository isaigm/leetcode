{"id":479450352,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618175790,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/479450352/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        int depth = max_depth(root);\n        int sum = 0;\n        dfs(root, 1, depth, sum);\n        return sum;\n    }\n    void dfs(TreeNode *root, int level, int &depth, int &sum)\n    {\n        if(root)\n        {\n            if(level == depth)\n            {\n                sum += root->val;\n            }\n            dfs(root->left, level + 1, depth, sum);\n            dfs(root->right, level + 1, depth, sum);\n        }\n    }\n    int max_depth(TreeNode *root)\n    {\n        if(root)\n        {\n            return 1 + std::max(max_depth(root->left), max_depth(root->right));\n        }\n        return 0;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"notes":"","topic_tags":[]}