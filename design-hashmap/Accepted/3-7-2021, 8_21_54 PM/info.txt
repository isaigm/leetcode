{"id":464945855,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1615170114,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/464945855/","is_pending":"Not Pending","title":"Design HashMap","memory":"172.5 MB","code":"class MyHashMap {\npublic:\n    /** Initialize your data structure here. */\n    MyHashMap() {\n        big_array = new int [1000000 + 1];\n        for(int i = 0; i < 1000000 + 1; i++)\n        {\n            big_array[i] = -1;\n        }\n    }\n    \n    /** value will always be non-negative. */\n    void put(int key, int value) {\n        big_array[key] = value;\n    }\n    \n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    int get(int key) {\n        return big_array[key];\n    }\n    \n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    void remove(int key) {\n        big_array[key] = -1;\n    }\n    private:\n    int *big_array = nullptr;\n};\n\n/**\n * Your MyHashMap object will be instantiated and called as such:\n * MyHashMap* obj = new MyHashMap();\n * obj->put(key,value);\n * int param_2 = obj->get(key);\n * obj->remove(key);\n */","compare_result":"111111111111111111111111111111111","title_slug":"design-hashmap","has_notes":false,"notes":"","topic_tags":[]}