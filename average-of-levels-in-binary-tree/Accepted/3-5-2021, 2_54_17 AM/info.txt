{"id":463816448,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614934457,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/463816448/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"22.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n        std::vector<double> ans;\n        if(root == nullptr) return ans;\n        std::queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int s = q.size();\n            double sum = 0;\n            for(int i = 0; i < s; i++)\n            {\n                auto n = q.front();\n                q.pop();\n                sum += n->val;\n                if(n->left != nullptr)\n                {\n                    q.push(n->left);\n                }\n                if(n->right != nullptr)\n                {\n                    q.push(n->right);\n                }\n            }\n            ans.push_back(sum / s);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"notes":"","topic_tags":[]}