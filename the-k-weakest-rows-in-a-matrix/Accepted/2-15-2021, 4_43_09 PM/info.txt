{"id":456512883,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1613428989,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/456512883/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"10.5 MB","code":"class Solution {\npublic:\n    std::vector<int> kWeakestRows(std::vector<std::vector<int>> &mat, int k)\n    {\n        std::vector<std::pair<int, int>> rows;\n        std::vector<int> ans;\n        for (int i = 0; i < mat.size(); i++)\n        {\n            int soldiers = 0;\n            for (int j = 0; j < mat[i].size(); j++)\n            {\n                if (mat[i][j])\n                {\n                    soldiers++;\n                }\n                else\n                {\n                    break;\n                }\n            }\n            rows.push_back(std::make_pair(i, soldiers));\n        }\n        std::sort(rows.begin(), rows.end(), [](const auto &p1, const auto &p2) {\n            return p1.second < p2.second || (p1.second == p2.second && p1.first < p2.first);\n        });\n        for (int i = 0; i < k && i < rows.size(); i++)\n        {\n            ans.push_back(rows[i].first);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix","has_notes":false,"notes":"","topic_tags":[]}