{"id":470423520,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1616298735,"status":10,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/470423520/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        std::queue<TreeNode*> q;\n        std::vector<std::pair<int, int>> levels;\n        int level = 1;\n        q.push(root);\n        while(!q.empty())\n        {\n            int s = q.size();\n            int sum = 0;\n            for(int i = 0; i < s; i++)\n            {\n                auto curr_node = q.front();\n                sum += curr_node->val;\n                q.pop();\n                if(curr_node->left != nullptr)\n                {\n                    q.push(curr_node->left);\n                }\n                if(curr_node->right != nullptr)\n                {\n                    q.push(curr_node->right);\n                }\n            }\n            levels.push_back({level++, sum});\n        }\n        std::sort(levels.begin(), levels.end(), [](const auto &p1, const auto &p2)\n        {\n            if(p1.first == p2.first) return p1.second > p2.second;\n            return p1.second > p2.second;\n            \n        });\n        return levels[0].first;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}