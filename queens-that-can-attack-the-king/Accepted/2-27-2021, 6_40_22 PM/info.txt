{"id":461474573,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1614472822,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/461474573/","is_pending":"Not Pending","title":"Queens That Can Attack the King","memory":"10.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> queensAttacktheKing(vector<vector<int>>& queens, vector<int>& king) {\n        std::vector<std::vector<int>> ans;\n        auto make_vec = [](int r, int c)\n        {\n            std::vector<int> vec;\n            vec.push_back(r);\n            vec.push_back(c);\n            return vec;\n        };\n        int board[8][8] = {{0}};\n        int row = king[0];\n        int col = king[1];\n        for(const auto &q: queens)\n        {\n            board[q[0]][q[1]] = 1;\n        }\n        for(int i = col; i < 8; i++)\n        {\n            if(board[row][i] == 1)\n            {\n                ans.push_back(std::move(make_vec(row, i)));\n                break;\n            }\n        }\n        for(int i = col; i >= 0; i--)\n        {\n            if(board[row][i] == 1)\n            {\n                ans.push_back(std::move(make_vec(row, i)));\n                break;\n            }\n        }\n        for(int i = row; i < 8; i++)\n        {\n            if(board[i][col] == 1)\n            {\n                ans.push_back(std::move(make_vec(i, col)));\n                break;\n            }\n        }\n        for(int i = row; i >= 0; i--)\n        {\n            if(board[i][col] == 1)\n            {\n                ans.push_back(std::move(make_vec(i, col)));\n                break;\n            }\n        }\n        for (int i = row, j = col; i < 8 && j < 8; i++, j++)\n        {\n           if(board[i][j] == 1)\n           {\n               ans.push_back(std::move(make_vec(i, j)));\n               break;\n           }\n        }\n        for (int i = row, j = col; i >= 0 && j >= 0; i--, j--)\n        {\n           if(board[i][j] == 1)\n           {\n               ans.push_back(std::move(make_vec(i, j)));\n               break;\n           }\n        }\n        for (int i = row, j = col; i >= 0 && j < 8; i--, j++)\n        {\n          if(board[i][j] == 1)\n           {\n               ans.push_back(std::move(make_vec(i, j)));\n               break;\n           }\n        }\n        for (int i = row, j = col; i < 8 && j >= 0; i++, j--)\n        {\n           if(board[i][j] == 1)\n           {\n               ans.push_back(std::move(make_vec(i, j)));\n               break;\n           }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"queens-that-can-attack-the-king","has_notes":false,"notes":"","topic_tags":[]}