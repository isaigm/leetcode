{"id":476102671,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1617491759,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/476102671/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"N/A","code":"public class Solution {\n    public boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '(') {\n                stack.push('(');\n            } else if (!stack.empty() && stack.peek() == '(') {\n                stack.pop();\n            } else {\n                return false;\n            }\n        }\n        return stack.empty();\n    }\n    public int longestValidParentheses(String s) {\n        int maxlen = 0;\n        for (int i = 0; i < s.length(); i++) {\n            for (int j = i + 2; j <= s.length(); j+=2) {\n                if (isValid(s.substring(i, j))) {\n                    maxlen = Math.max(maxlen, j - i);\n                }\n            }\n        }\n        return maxlen;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"longest-valid-parentheses","has_notes":false,"notes":"","topic_tags":[]}