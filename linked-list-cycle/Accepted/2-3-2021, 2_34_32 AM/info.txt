{"id":451417228,"lang":"cpp","lang_name":"C++","time":"1 year, 11 months","timestamp":1612341272,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/451417228/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"10 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n         std::map<ListNode*, bool> visited;\n    ListNode *ptr = head;\n    while (ptr != NULL)\n    {\n        if (visited[ptr])\n        {\n            return true;\n        }\n        else\n        {\n            visited[ptr] = true;\n        }\n        ptr = ptr->next;\n    }\n    return false;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle","has_notes":false,"notes":"","topic_tags":[]}