{"id":474891607,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1617238361,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/474891607/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"56 MB","code":"struct point\n{\n    int x, y;\n};\nstruct comparator\n{\n  bool operator()(point &p1, point &p2)\n  {\n      return (p1.x * p1.x + p1.y * p1.y) < (p2.x * p2.x + p2.y * p2.y);\n  }\n};\nclass Solution {\npublic:\n    \n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n        std::priority_queue<point, std::vector<point>, comparator> min_heap;\n        std::vector<std::vector<int>> ans;\n        for(const auto &p: points)\n        {\n            point p1 {p[0], p[1]};\n            min_heap.push(p1);\n            if(min_heap.size() > k)\n            {\n                min_heap.pop();\n            }\n        }\n        for(int i = 0; i < k; i++)\n        {\n            auto p = min_heap.top();\n            std::vector<int> p1(2);\n            p1[0] = p.x;\n            p1[1] = p.y;\n            ans.push_back(p1);\n            min_heap.pop();\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"notes":"","topic_tags":[]}