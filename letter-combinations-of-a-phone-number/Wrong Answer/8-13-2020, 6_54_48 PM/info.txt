{"id":380554236,"lang":"cpp","lang_name":"C++","time":"2 years, 4 months","timestamp":1597362888,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/380554236/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution {\npublic:\n    void helper(std::map<char, std::string> &mapping, std::vector<std::string> &res, std::string &curr, std::string &digits, size_t idx){\n    if(curr.size() == digits.size()){\n        res.push_back(curr);\n        return;\n    }\n    if(idx < digits.length()){\n        std::string aux = mapping[digits[idx]];\n        for(size_t i = 0; i < aux.length(); i++){\n            curr.push_back(aux[i]);\n            helper(mapping, res, curr, digits, idx + 1);\n            curr.pop_back();\n        }\n    }\n}\nstd::vector<std::string> letterCombinations(std::string digits) {\n    std::map<char, std::string> mapping {{'2', \"abc\"}, {'3', \"def\"}, {'4', \"ghi\"}, {'5', \"jkl\"}, {'6', \"mno\"},\n                                        {'7', \"pqrs\"}, {'8', \"tuv\"}, {'9', \"wxyz\"}};\n    std::vector<std::string> res;\n    std::string curr;\n    helper(mapping, res, curr, digits, 0);\n    return res;\n}\n};","compare_result":"1011111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"notes":"","topic_tags":[]}