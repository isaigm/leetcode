{"id":530325419,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1627594507,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/530325419/","is_pending":"Not Pending","title":"Count All Possible Routes","memory":"N/A","code":"class Solution {\npublic:\n    int countRoutes(vector<int>& locations, int start, int finish, int fuel) {\n        std::map<std::pair<int, int>, uint64_t> dp;\n        return util(dp, locations, start, finish, fuel);\n    }\n    uint64_t util(std::map<std::pair<int, int>, uint64_t> &dp, std::vector<int> &locations, int curr, int finish, int fuel)\n    {\n        if(dp.find({curr, fuel}) != dp.end())\n        {\n            return dp[{curr, fuel}];\n        }\n        uint64_t ans = 0;\n        if(fuel < 0)\n        {\n            return 0;\n        }\n        if(curr == finish)\n        {\n            ans =  1;\n        }\n        for(int i = 0; i < locations.size(); i++)\n        {\n            if(i != curr)\n            {\n                int f = fuel - std::abs(locations[i] - locations[curr]);\n               \n                ans += util(dp, locations, i, finish, f);\n            }\n        }\n        dp[{curr, fuel}] = ans;\n        return ans % 1000000007;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111101111111011110000110101100000000","title_slug":"count-all-possible-routes","has_notes":false,"notes":"","topic_tags":[]}