{"id":610549209,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1640987847,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/610549209/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        std::vector<int> ans;\n        helper(ans, root);\n        return ans;\n    }\n    void helper(std::vector<int> &vec, TreeNode *root)\n    {\n        if(root)\n        {\n            helper(vec, root->left);\n            vec.push_back(root->val);\n            helper(vec, root->right);\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"notes":"","topic_tags":[]}