{"id":476209083,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1617510075,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/476209083/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n        bool ans = true;\n        int unique = root->val;\n        dfs(ans, unique, root);\n        return ans;\n    }\n    void dfs(bool &ans, int &unique, TreeNode *root)\n    {\n        if(root)\n        {\n            if(root->val == unique)\n            {\n                dfs(ans, unique, root->left);\n                dfs(ans, unique, root->right);\n            } else ans = false;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"notes":"","topic_tags":[]}