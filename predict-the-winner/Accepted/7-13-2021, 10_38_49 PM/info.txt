{"id":522227377,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1626233929,"status":10,"status_display":"Accepted","runtime":"968 ms","url":"/submissions/detail/522227377/","is_pending":"Not Pending","title":"Predict the Winner","memory":"7.3 MB","code":"class Solution {\npublic:\n    bool PredictTheWinner(vector<int>& nums) {\n        \n        return minimax(nums, true, 0, 0) == 1;\n        \n    }\nint minimax(std::vector<int> &nums, bool turn, int player1, int player2)\n{\n\n    if (nums.size() == 1)\n    {\n        if (turn)\n        {\n            if (player1 + nums[0] >= player2)\n                return 1;\n        }\n        else if (player2 + nums[0] <= player1)\n            return 1;\n\n        return -1;\n    }\n    int temp = nums[0];\n    int p1 = player1, p2 = player2;\n    nums.erase(nums.begin());\n    if (turn)\n    {\n        player1 += temp;\n    }\n    else\n    {\n        player2 += temp;\n    }\n    int m1 = minimax(nums, !turn, player1, player2);\n\n    nums.insert(nums.begin(), temp);\n    temp = nums.back();\n    nums.pop_back();\n    if (turn)\n    {\n        p1 += temp;\n    }\n    else\n    {\n        p2 += temp;\n    }\n\n    int m2 = minimax(nums, !turn, p1, p2);\n    nums.push_back(temp);\n\n    if (turn)\n        return std::max(m1, m2);\n    else\n        return std::min(m1, m2);\n}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"predict-the-winner","has_notes":false,"notes":"","topic_tags":[]}