{"id":522221250,"lang":"cpp","lang_name":"C++","time":"1 year, 5 months","timestamp":1626233056,"status":10,"status_display":"Accepted","runtime":"1008 ms","url":"/submissions/detail/522221250/","is_pending":"Not Pending","title":"Predict the Winner","memory":"7.3 MB","code":"class Solution {\npublic:\n    bool PredictTheWinner(vector<int>& nums) {\n        \n        return back(nums, true, 0, 0) == 1;\n        \n    }\nint back(std::vector<int> &nums, bool turn, int player1, int player2)\n{\n \n    if(nums.size() == 1)\n    {\n        if(turn)\n        {\n            if(player1 + nums[0] >= player2) return 1;\n        }\n        else if(player2 + nums[0] <= player1) return 1;\n\n        return -1;\n    }\n\n    if(turn)\n    {\n        int temp = nums[0];\n\n        nums.erase(nums.begin());\n        int m1 = back(nums, false, player1 + temp, player2);\n        \n        nums.insert(nums.begin(), temp);\n        temp = nums.back();\n        nums.pop_back();\n        \n        \n        int m2 = back(nums, false, player1 + temp, player2);\n        nums.push_back(temp);\n\n        return std::max(m1, m2);\n    }else{\n        int temp = nums[0];\n\n        nums.erase(nums.begin());\n\n        int m1 = back(nums, true, player1, player2 + temp);\n        nums.insert(nums.begin(), temp);\n        temp = nums.back();\n        nums.pop_back();\n        int m2 = back(nums, true, player1, player2 + temp);\n        nums.push_back(temp);\n        return std::min(m1, m2);\n    }\n}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"predict-the-winner","has_notes":false,"notes":"","topic_tags":[]}