{"id":455796008,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1613276316,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/455796008/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        int nodes = 0;\n        if(root != nullptr)\n        {\n            nodes = countNodes(root->left) + countNodes(root->right) + 1;\n        }\n        return nodes;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"notes":"","topic_tags":[]}