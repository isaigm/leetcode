{"id":832414695,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1667012826,"status":10,"status_display":"Accepted","runtime":"769 ms","url":"/submissions/detail/832414695/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"179.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode *root, int *cnt, int &ans)\n    {\n        if(root == nullptr) return;\n        cnt[root->val]++;\n        if(root->left == nullptr && root->right == nullptr)\n        {\n            if(is_palindrome(cnt)) ans++;\n        }else\n        {\n            helper(root->left, cnt, ans);\n            helper(root->right, cnt, ans);\n        }\n        cnt[root->val]--;\n    }\n    int pseudoPalindromicPaths (TreeNode* root) {\n        int cnt[10] = {0};\n        int ans = 0;\n        helper(root, cnt, ans);\n        return ans;\n    }\n    bool is_palindrome(int *cnt)\n    {\n        int how_many = 0;\n        for(int i = 0; i < 10; i++)\n        {\n            if(cnt[i] & 1) how_many++;\n        }\n        if(how_many <= 1) return true;\n        return false;\n    }\n\n    \n};\n//3311 2 113","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}