{"id":459151037,"lang":"cpp","lang_name":"C++","time":"1 year, 10 months","timestamp":1613977006,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/459151037/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void util(TreeNode* root1, TreeNode* root2, TreeNode **new_root){\n        if(root1 == nullptr && root2 == nullptr) return;\n        if(root1 != nullptr && root2 != nullptr)\n        {\n            *new_root = new TreeNode;\n            (*new_root)->val = root1->val + root2->val;\n            util(root1->left, root2->left, &((*new_root)->left));\n            util(root1->right, root2->right, &((*new_root)->right));\n        }\n        if(root1 != nullptr && root2 == nullptr)\n        {\n            *new_root = new TreeNode(root1->val);\n        }\n        if(root1 == nullptr && root2 != nullptr)\n        {\n            *new_root = new TreeNode(root2->val);\n        }\n    }\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        if(root1 == nullptr && root2 != nullptr) return root2;\n        if(root1 != nullptr && root2 == nullptr) return root1;\n        if(root1 == nullptr && root2 == nullptr) return nullptr;\n        TreeNode *new_root = nullptr;\n        util(root1, root2, &new_root);\n        return new_root;\n    }\n};","compare_result":"11111101011111111100000000000000000000000000000000000000000000000010010000000000000001000000000000100000000000010000000111111111111111111111000000000000000000000000000000000000000011","title_slug":"merge-two-binary-trees","has_notes":false,"notes":"","topic_tags":[]}