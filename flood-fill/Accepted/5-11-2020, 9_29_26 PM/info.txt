{"id":338071038,"lang":"python3","lang_name":"Python3","time":"2 years, 7 months","timestamp":1589250566,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/338071038/","is_pending":"Not Pending","title":"Flood Fill","memory":"13.8 MB","code":"class Solution:\n    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:\n        rows = len(image)\n        cols = len(image[0])\n        color = image[sr][sc]\n        visited = []\n        def fill(x : int, y: int):\n            if image[y][x] == color and (x, y) not in visited:\n                image[y][x] = newColor\n                coords = [(x, y + 1), (x, y - 1), (x + 1, y), (x - 1, y)]\n                \"\"\"            (x, y-1) \n                (x - 1, sc)   (x, y) (x + 1, sc)\n                            (x, y+1)\n                \"\"\"\n                visited.append((x, y))\n                for px, py in coords:\n                    if px >= 0 and px < cols and py >= 0 and py < rows:\n                            fill(px, py)\n        fill(sc, sr)\n        return image","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"notes":"","topic_tags":[]}