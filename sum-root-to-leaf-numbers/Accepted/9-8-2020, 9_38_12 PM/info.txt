{"id":393072062,"lang":"cpp","lang_name":"C++","time":"2 years, 3 months","timestamp":1599619092,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/393072062/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void helper(TreeNode *root, int &sum, string &n){\n        if(root != nullptr){\n            n.push_back(root->val + '0');\n            if(root->left == nullptr && root->right == nullptr){\n                stringstream aux(n);\n                int k;\n                aux >> k;\n                sum += k;\n            }else{\n                helper(root->left, sum, n);\n                helper(root->right, sum, n);\n            }\n            n.pop_back();\n            \n        }\n    }\n    int sumNumbers(TreeNode* root) {\n        int sum = 0;\n        string n;\n        helper(root, sum, n);\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"notes":"","topic_tags":[]}