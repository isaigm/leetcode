{"id":470814924,"lang":"cpp","lang_name":"C++","time":"1 year, 9 months","timestamp":1616379165,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/470814924/","is_pending":"Not Pending","title":"Super Ugly Number","memory":"N/A","code":"class Solution {\npublic:\n    int nthSuperUglyNumber(int n, vector<int>& primes) {\n        if(n == 1) return 1;\n        bool pprimes[1001];\n        std::vector<int> all_primes_to_1000;\n        std::set<int> what_primes;\n        for(const auto &p: primes)\n        {\n            what_primes.insert(p);\n        }\n        for(int i = 2; i < 1001; i++)\n        {\n            pprimes[i] = true;\n        }\n        for(int i = 2; i < 1001; i++)\n        {\n            for(int j = 2; i * j < 1001; j++)\n            {\n                pprimes[i * j] = false;\n            }\n        }\n        for(int i = 2; i < 1001; i++)\n        {\n            if(pprimes[i])\n            {\n                all_primes_to_1000.push_back(i);\n            }\n        }\n        auto fact = [&](int s)\n        {\n            int idx = 0;\n            while(s > 1 && idx < all_primes_to_1000.size())\n            {\n                if(s % all_primes_to_1000[idx] == 0)\n                {\n                    if(what_primes.find(all_primes_to_1000[idx]) == what_primes.end())\n                        return false;\n                    s /= all_primes_to_1000[idx];\n                }else idx++;\n            }\n            return s == 1;\n        };\n        int k = 0;\n        int ans = 0;\n        int p = 2;\n        while(k < n - 1)\n        {\n            if(fact(p))\n            {\n                ans = p;\n                k++; \n            }\n            p++;\n        }\n        return ans;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"super-ugly-number","has_notes":false,"notes":"","topic_tags":[]}