{"id":479060258,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1618100159,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/479060258/","is_pending":"Not Pending","title":"Number of Steps to Reduce a Number in Binary Representation to One","memory":"6.3 MB","code":"class Solution {\npublic:\n    int is_one(std::vector<bool> &bits, int lsb)\n    {\n        int i = 0;\n        for(; i < bits.size(); i++)\n        {\n            if(bits[i]) break;\n        }\n        return i == lsb;\n    }\n    void shif_right(std::vector<bool> &bits)\n    {\n        for(int i = bits.size() - 1; i > 0; i--)\n        {\n            bits[i] = bits[i - 1];\n        }\n        bits[0] = 0;\n    }\n    void add_one(std::vector<bool> &bits)\n    {\n        int carry = 1;\n        for(int i = bits.size() - 1; i > 0; i--)\n        {\n            if(carry)\n            {\n                if(bits[i] + carry > 1)\n                {\n                    bits[i] = 0;\n                }else \n                {\n                    bits[i] = 1;\n                    carry = 0;\n                    break;\n                }\n            }\n        }\n        if(carry)\n        {\n            bits[0] = 1;\n        }\n    }\n    int numSteps(string s) {\n        std::vector<bool> bits(s.size() + 1);\n        s[0] = 0;\n        for(int i = 0; i < s.size(); i++)\n        {\n            bits[i + 1] = s[i] - '0';\n        }\n        int steps = 0;\n        int lsb = s.size();\n      \n        while(!is_one(bits, lsb))\n        {\n            if(bits[lsb])\n            {\n                add_one(bits);\n            }else\n            {\n                shif_right(bits);\n            }\n            steps++;\n        }\n        return steps;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-steps-to-reduce-a-number-in-binary-representation-to-one","has_notes":false,"notes":"","topic_tags":[]}